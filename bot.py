from telegram import Bot, Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters, CallbackContext
import logging

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
TOKEN = "8118288915:AAFetk_yAXr517sDSuG6NZ2yFi96q-ETvoU"
ORGANIZER_ID = "Y318677172"  # –ö—É–¥–∞ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –≥–æ—Å—Ç–µ–π

# File IDs —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
PHOTO_IDS = [
    "AAMCAgADGQEBxq37Z5ud5B6CXi7slU3qf_Mzj1lvcnsAAghuAAJUTuBIigTVuYm2AzABAAdtAAM2BA", 
    "AAMCAgADGQEBxq5TZ5ue3HZk18lBvi-f8PbtMKFRwzYAAiluAAJUTuBIegOfV6nETpoBAAdtAAM2BA", 
    "AAMCAgADGQEBxq5oZ5ue6n7KvKI8a651oCVfjw2BEXgAAixuAAJUTuBINxAc6s1cR2oBAAdtAAM2BA", 
    "AAMCAgADGQEBxq54Z5ufEvMrro6Fz5HWbr6mXqj4x1IAAjFuAAJUTuBIxFuQG_5YdKoBAAdtAAM2BA", 
    "AAMCAgADGQEBxq57Z5ufGBrMKydlrY7XDlABXD4EheYAAjJuAAJUTuBIOBsc5sJj64wBAAdtAAM2BA", 
    "AAMCAgADGQEBxq6KZ5ufPaicgL3RRnzbwGESoqPWz54AAjtuAAJUTuBIBOx-bjDTcrYBAAdtAAM2BA", 
    "AAMCAgADGQEBxq6OZ5ufUJ2AlIaCymTFE47SzUHiusMAAkBuAAJUTuBInQHldAOFVOsBAAdtAAM2BA"
]

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

def start(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    context.bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à—É —Å–≤–∞–¥—å–±—É! üéâ")
    
    for photo in PHOTO_IDS[:3]:
        context.bot.send_photo(chat_id, photo)
    
    context.bot.send_message(chat_id, "üìç –õ–æ–∫–∞—Ü–∏—è: Forest Glamp [–°—Å—ã–ª–∫–∞](https://2gis.ru/ufa/geo/70000001081557905/55.265181,55.122961) (–ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –¥–æ–º–∏–∫–∏ –¥–ª—è –Ω–æ—á–µ–≤–∫–∏ üõè)\n\nüöå –¢—Ä–∞–Ω—Å—Ñ–µ—Ä - 13:30, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å 1 —á–∞—Å 40 –º–∏–Ω—É—Ç. –û–±—Ä–∞—Ç–Ω–æ –≤ 11:30\n\n‚è≥ –¢–∞–π–º–∏–Ω–≥:\n- 15:30 –§—É—Ä—à–µ—Ç\n- 16:00 –¶–µ—Ä–µ–º–æ–Ω–∏—è\n- 16:40 –ë–∞–Ω–∫–µ—Ç\n- 23:00 –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ", parse_mode='Markdown')
    
    for photo in PHOTO_IDS[3:]:
        context.bot.send_photo(chat_id, photo)
    
    # –ó–∞–ø—É—Å–∫ –æ–ø—Ä–æ—Å–∞
    ask_attendance(update, context)

def ask_attendance(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton("–î–∞", callback_data='attending_yes'),
                 InlineKeyboardButton("–ù–µ—Ç", callback_data='attending_no')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text("–¢—ã –ø—Ä–∏–¥—ë—à—å –Ω–∞ —Å–≤–∞–¥—å–±—É?", reply_markup=reply_markup)

def button(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    response = query.data
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É
    context.bot.send_message(ORGANIZER_ID, f"–û—Ç–≤–µ—Ç –æ—Ç {query.message.chat.first_name}: {response}")
    
    steps = {
        'attending_yes': ("–ë—É–¥–µ—à—å —Å +1?", ['plus_one_yes', 'plus_one_no']),
        'plus_one_yes': ("–û—Å—Ç–∞—ë—à—å—Å—è —Å –Ω–æ—á—ë–≤–∫–æ–π?", ['stay_yes', 'stay_no']),
        'plus_one_no': ("–û—Å—Ç–∞—ë—à—å—Å—è —Å –Ω–æ—á—ë–≤–∫–æ–π?", ['stay_yes', 'stay_no']),
        'stay_yes': ("–¢–µ–±–µ –Ω—É–∂–µ–Ω —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä?", ['transfer_both', 'transfer_to', 'transfer_from', 'transfer_no']),
        'stay_no': ("–¢–µ–±–µ –Ω—É–∂–µ–Ω —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä?", ['transfer_both', 'transfer_to', 'transfer_from', 'transfer_no']),
        'transfer_both': ("–ö–∞–∫–æ–µ –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å?", ['menu_meat', 'menu_fish']),
        'transfer_to': ("–ö–∞–∫–æ–µ –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å?", ['menu_meat', 'menu_fish']),
        'transfer_from': ("–ö–∞–∫–æ–µ –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å?", ['menu_meat', 'menu_fish']),
        'transfer_no': ("–ö–∞–∫–æ–µ –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å?", ['menu_meat', 'menu_fish']),
        'menu_meat': ("–í—ã–±–µ—Ä–∏ –Ω–∞–ø–∏—Ç–∫–∏ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ):", ['drink_champagne', 'drink_redwine', 'drink_whitewine', 'drink_martini', 'drink_strong', 'drink_nonalc']),
        'menu_fish': ("–í—ã–±–µ—Ä–∏ –Ω–∞–ø–∏—Ç–∫–∏ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ):", ['drink_champagne', 'drink_redwine', 'drink_whitewine', 'drink_martini', 'drink_strong', 'drink_nonalc'])
    }
    
    if response in steps:
        text, options = steps[response]
        buttons = [[InlineKeyboardButton(option.replace('_', ' '), callback_data=option)] for option in options]
        query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(buttons))
    else:
        query.edit_message_text("–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! –ï—Å–ª–∏ –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É, –Ω–∞–∂–º–∏—Ç–µ /start –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ. –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–≤–∞–¥–µ–±–Ω—ã–π —á–∞—Ç: [–ü–µ—Ä–µ–π—Ç–∏](https://t.me/+YnMBjkthhZ1mN2Qy)", parse_mode='Markdown')

def notify_guests(update: Update, context: CallbackContext):
    if str(update.message.chat_id) == ORGANIZER_ID:
        message = update.message.text.replace("/notify ", "")
        for guest in context.bot_data.get("guests", []):
            context.bot.send_message(guest, f"üì¢ –í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞:\n{message}")
        update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –≥–æ—Å—Ç—è–º.")
    else:
        update.message.reply_text("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞.")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(button))
    dp.add_handler(CommandHandler("notify", notify_guests))
    
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
