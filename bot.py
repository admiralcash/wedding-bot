from flask import Flask, request
import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import os

TOKEN = "8118288915:AAFetk_yAXr517sDSuG6NZ2yFi96q-ETvoU"
ADMIN_ID = 318677172  # –¢–µ–ª–µ–≥—Ä–∞–º ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –°–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ ID
PHOTO_IDS = [
    "AAMCAgADGQEBxq37Z5ud5B6CXi7slU3qf_Mzj1lvcnsAAghuAAJUTuBIigTVuYm2AzABAAdtAAM2BA",
    "AAMCAgADGQEBxq5TZ5ue3HZk18lBvi-f8PbtMKFRwzYAAiluAAJUTuBIegOfV6nETpoBAAdtAAM2BA",
    "AAMCAgADGQEBxq5oZ5ue6n7KvKI8a651oCVfjw2BEXgAAixuAAJUTuBINxAc6s1cR2oBAAdtAAM2BA",
    "AAMCAgADGQEBxq54Z5ufEvMrro6Fz5HWbr6mXqj4x1IAAjFuAAJUTuBIxFuQG_5YdKoBAAdtAAM2BA",
    "AAMCAgADGQEBxq57Z5ufGBrMKydlrY7XDlABXD4EheYAAjJuAAJUTuBIOBsc5sJj64wBAAdtAAM2BA",
    "AAMCAgADGQEBxq6KZ5ufPaicgL3RRnzbwGESoqPWz54AAjtuAAJUTuBIBOx-bjDTcrYBAAdtAAM2BA",
    "AAMCAgADGQEBxq6OZ5ufUJ2AlIaCymTFE47SzUHiusMAAkBuAAJUTuBInQHldAOFVOsBAAdtAAM2BA"
]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

def send_question(chat_id, question, buttons, next_step):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for button in buttons:
        markup.add(KeyboardButton(button))
    msg = bot.send_message(chat_id, question, reply_markup=markup)
    bot.register_next_step_handler(msg, next_step)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    user_data[chat_id] = {}
    
    for photo_id in PHOTO_IDS[:3]:
        bot.send_photo(chat_id, photo_id)
    
    bot.send_message(chat_id, "üìç–õ–æ–∫–∞—Ü–∏—è: Forest Glamp https://2gis.ru/ufa/geo/70000001081557905/55.265181,55.122961 (–ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã –¥–æ–º–∏–∫–∏ –¥–ª—è –Ω–æ—á–µ–≤–∫–∏üõè )\n\n"
                              "üöå –¢—Ä–∞–Ω—Å—Ñ–µ—Ä - –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è 13:30, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å 1 —á–∞—Å 40 –º–∏–Ω—É—Ç. –û–±—Ä–∞—Ç–Ω–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –∫ 11:30\n\n"
                              "‚è≥ –¢–∞–π–º–∏–Ω–≥ —Å–≤–∞–¥—å–±—ã - 15:30 - –§—É—Ä—à–µ—Ç, 16:00 - –°–≤–∞–¥–µ–±–Ω–∞—è —Ü–µ—Ä–µ–º–æ–Ω–∏—è, 16:40 - –ë–∞–Ω–∫–µ—Ç, 23:00 - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–æ—Ä–∂–µ—Å—Ç–≤–∞")
    
    for photo_id in PHOTO_IDS[3:]:
        bot.send_photo(chat_id, photo_id)
    
    send_question(chat_id, "–¢—ã –ø—Ä–∏–¥—ë—à—å –Ω–∞ —Å–≤–∞–¥—å–±—É?", ["–î–∞", "–ù–µ—Ç"], process_attendance)

def process_attendance(message):
    chat_id = message.chat.id
    user_data[chat_id]['attendance'] = message.text
    send_question(chat_id, "–ë—É–¥–µ—à—å —Å +1?", ["–î–∞", "–ù–µ—Ç"], process_plus_one)

def process_plus_one(message):
    chat_id = message.chat.id
    user_data[chat_id]['plus_one'] = message.text
    send_question(chat_id, "–û—Å—Ç–∞–µ—à—å—Å—è –ª–∏ —Å –Ω–æ—á–µ–≤–∫–æ–π?", ["–î–∞", "–ù–µ—Ç"], process_stay)

def process_stay(message):
    chat_id = message.chat.id
    user_data[chat_id]['stay'] = message.text
    send_question(chat_id, "–¢–µ–±–µ –Ω—É–∂–µ–Ω —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä?", ["–î–∞, –≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã", "–¢–æ–ª—å–∫–æ –Ω–∞ —Å–≤–∞–¥—å–±—É", "–¢–æ–ª—å–∫–æ —Å–æ —Å–≤–∞–¥—å–±—ã", "–ù–µ—Ç, –ø—Ä–∏–µ–¥—É –Ω–∞ –º–∞—à–∏–Ω–µ"], process_transfer)

def process_transfer(message):
    chat_id = message.chat.id
    user_data[chat_id]['transfer'] = message.text
    send_question(chat_id, "–ö–∞–∫–æ–µ –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å?", ["–ú—è—Å–æ", "–†—ã–±–∞"], process_menu)

def process_menu(message):
    chat_id = message.chat.id
    user_data[chat_id]['menu'] = message.text
    send_question(chat_id, "–í—ã–±–µ—Ä–∏ –Ω–∞–ø–∏—Ç–∫–∏", ["–®–∞–º–ø–∞–Ω—Å–∫–æ–µ", "–ö—Ä–∞—Å–Ω–æ–µ –≤–∏–Ω–æ", "–ë–µ–ª–æ–µ –≤–∏–Ω–æ", "–ú–∞—Ä—Ç–∏–Ω–∏", "–ö—Ä–µ–ø–∫–∏–π –∞–ª–∫–æ–≥–æ–ª—å", "–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏"], process_drinks)

def process_drinks(message):
    chat_id = message.chat.id
    user_data[chat_id]['drinks'] = message.text
    msg = bot.send_message(chat_id, "–ö–∞–∫–∏–µ –µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è/–≤–æ–ø—Ä–æ—Å—ã?")
    bot.register_next_step_handler(msg, process_comments)

def process_comments(message):
    chat_id = message.chat.id
    user_data[chat_id]['comments'] = message.text
    summary = f"‚úÖ –ù–æ–≤—ã–π –æ—Ç–≤–µ—Ç:\n\n"
    for key, value in user_data[chat_id].items():
        summary += f"{key}: {value}\n"
    bot.send_message(ADMIN_ID, summary)
    bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!\n\n–ï—Å–ª–∏ –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É ‚Äì –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ /start –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ. –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–≤–∞–¥–µ–±–Ω—ã–π —á–∞—Ç: https://t.me/+YnMBjkthhZ1mN2Qy")

@bot.message_handler(commands=['notify'])
def notify_users(message):
    if message.chat.id == ADMIN_ID:
        msg = bot.send_message(ADMIN_ID, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –≥–æ—Å—Ç–µ–π:")
        bot.register_next_step_handler(msg, broadcast_message)

def broadcast_message(message):
    text = message.text
    for user_id in user_data.keys():
        try:
            bot.send_message(user_id, text)
        except:
            continue
    bot.send_message(ADMIN_ID, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –≥–æ—Å—Ç—è–º!")

@app.route('/' + TOKEN, methods=['POST'])
def getMessage():
    data = request.get_json()
    print(f"üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram: {data}")  # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "", 200

@app.route('/')
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url=f"https://your-server.com/{TOKEN}")
    return "Webhook set!", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
